@use "params" as *;
@use "fonts";
@use "sass:string";

$typoSize: (
  // selector font sizeAtMax lineheight margin
  ".brand-name" ".brand-font" 6rem 0.6 0,
  ".brand-sub" ".brand-font" 4rem 1 0,
  "h1" ".accent-font" 4rem 1 1.5rem,
  "h2" ".accent-font" 3rem 1.1 1rem,
  "h3" ".accent-font" 2.5rem 1.1 0.5rem,
  "a" ".regular-font" 2rem 1.3 0.5rem,
  "p" ".regular-font" 2rem 1.5 0.5rem,
  "li" ".regular-font" 2rem 1.5 0.5rem,
  "figcaption" ".regular-font" 1.5rem 1.2 0.5rem
);

@each $selector, $font, $size, $lineheight, $margin in $typoSize {
  $keyframe: string.unique-id();
  @keyframes #{$keyframe} {
    0% {
      font-size: 0;
    }
    100% {
      font-size: $size;
      margin: $margin;
    }
  }
  #{$selector} {
    @extend #{$font};
    --tt-key: #{$keyframe};
    font-size: calc(#{$size} * 0.75);
    line-height: $lineheight;
  }
}

a {
  white-space: nowrap;
}

h1 {
  // -tt-ease: cubic-bezier(.5,.15,.5,1);
  // font-size: clamp(1rem, 5vw + 0.9rem, 1.6rem); /* Fallback value */
  color: $secondary;
  margin-bottom: $elementSpacing;
}

h2 {
  margin: $elementSpacing 0;
}

p {
  margin-bottom: $elementSpacing;
  &.small {
    font-size: 1.2rem;
  }
}
