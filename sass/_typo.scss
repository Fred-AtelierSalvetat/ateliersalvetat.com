@use "params" as *;
@use "fonts";
@use "sass:string";

$typoSize: (
  // selector font sizeAtMax lineheight margin
  ".brand-name" ".brand-font" 5rem 0.6 "0",
  ".brand-sub" ".brand-font" 3.5rem 1 "0",
  "h1" ".accent-font" 4rem 1 "2rem 0",
  "h2" ".accent-font" 3rem 1.1 "1.5rem 0",
  "h3" ".accent-font" 2.5rem 1.1 "1rem 0",
  "a" ".regular-font" 2rem 1.3 "0",
  "p" ".regular-font" 2rem 1.5 "1rem 0",
  "li" ".regular-font" 2rem 1.5 "0",
  "figcaption" ".regular-font" 1rem 1.2 "0.25rem 0"
);

@each $selector, $font, $size, $lineheight, $margin in $typoSize {
  $keyframe: string.unique-id();
  @keyframes #{$keyframe} {
    0% {
      font-size: 0;
      margin: 0;
    }
    100% {
      font-size: $size;
      margin: string.unquote($margin);
    }
  }
  #{$selector} {
    @extend #{$font};
    --tt-key: #{$keyframe};
    line-height: $lineheight;
    // Fallback
    font-size: calc(#{$size} * 0.75);
    margin: string.unquote($margin);
  }
}

a {
  white-space: nowrap;
}

h1 {
  // -tt-ease: cubic-bezier(.5,.15,.5,1);
  // font-size: clamp(1rem, 5vw + 0.9rem, 1.6rem); /* Fallback value */
  color: $secondary;
}

p {
  margin-bottom: $elementSpacing;
  &.small {
    font-size: 1.2rem;
  }
}
